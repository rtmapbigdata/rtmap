agent1.sources = source1
agent1.sinks = sink1
agent1.channels = channel1

agent1.sources.source1.type = cn.rtmap.flume.source.SQLSource
agent1.sources.source1.zookeeper.hosts = r1s2:2181,r1s3:2181,r2s2:2181
agent1.sources.source1.zookeeper.timeout = 15000
agent1.sources.source1.zookeeper.znode.path=/barcode

agent1.sources.source1.connection.url = jdbc:oracle:thin:@10.66.2.101:1521:ora10g
agent1.sources.source1.user = bigdata
agent1.sources.source1.password = ypgcwrs

agent1.sources.source1.run.query.delay=30000
agent1.sources.source1.status.file.path = /mnt/bigpfs/bcia-queue/conf
agent1.sources.source1.status.file.name = sql-barcode.ctl
agent1.sources.source1.batch.size = 1000
agent1.sources.source1.max.rows = 10000

agent1.sources.source1.table = log_barcode_record
agent1.sources.source1.check.column.name = LAST_TIMESTAMP
agent1.sources.source1.check.column.initial.value = 2015-10-26 00:00:00

agent1.sources.source1.last.value.query = select to_char(max(last_timestamp), 'yyyy-mm-dd hh24:mi:ss')  as last_timestamp from log_barcode_record partition(P2015) where last_timestamp >= to_timestamp('%s','yyyy-mm-dd hh24:mi:ss')
agent1.sources.source1.custom.query = select 'barcode' as type,data_source,id,passager_name,case when regexp_like(substr(trim(flight),2,1),'([A-Z]+|[A-Z])') and substr(trim(flight),3,2) = '00' then substr(trim(flight),1,2)||substr(trim(flight),5) when regexp_like(substr(trim(flight),2,1),'([A-Z]+|[A-Z])') and substr(trim(flight),3,1) = '0'  then substr(trim(flight),1,2)||substr(trim(flight),4) when length(trim(flight)) = 7 and substr(trim(flight),length(trim(flight)),1) = '0' then substr(trim(flight),1,length(trim(flight))-1) else replace(flight,' ','') end as flight,case when length(flight_date) = 8 and to_date(flight_date,'YYYYMMDDHH24:MI:SS') - to_date(to_char(last_scan_time,'YYYYMMDDHH24:MI:SS'),'YYYYMMDDHH24:MI:SS') <= 2 and to_date(flight_date,'YYYYMMDDHH24:MI:SS') - to_date(to_char(last_scan_time,'YYYYMMDDHH24:MI:SS'),'YYYYMMDDHH24:MI:SS')>= -2 then flight_date else to_char(last_scan_time,'YYYYMMDD') end as flight_date,ship,seat_no,to_number(regexp_substr(boarding_no, '[0-9]+')) as boarding_no,start_city,end_city,gate_name,barcode,first_scan_time,to_char(last_scan_time, 'yyyy-mm-dd hh24:mi:ss') as last_scan_time,scan_number,error_code,last_timestamp from log_barcode_record partition(P2015) where last_timestamp > to_timestamp('%s','yyyy-mm-dd hh24:mi:ss') and last_timestamp <= to_timestamp('%s','yyyy-mm-dd hh24:mi:ss') and (error_code = 0 OR error_code is null) order by last_timestamp

agent1.sources.source1.interceptors = i1
agent1.sources.source1.interceptors.i1.type = cn.rtmap.flume.validation.Validator$Builder

agent1.sources.source1.channels = channel1
agent1.channels.channel1.type = memory
agent1.channels.channel1.capacity = 100000
agent1.channels.channel1.transactionCapacity = 100000

# kafka sink
agent1.sinks.sink1.type = com.thilinamb.flume.sink.KafkaSink
agent1.sinks.sink1.custom-topic = barcode
agent1.sinks.sink1.preprocessor = com.thilinamb.flume.sink.example.SimpleMessagePreprocessor
agent1.sinks.sink1.kafka.metadata.broker.list = r1s2:6667,r2s2:6667,r2s3:6667,r2s4:6667
agent1.sinks.sink1.kafka.serializer.class = kafka.serializer.StringEncoder
agent1.sinks.sink1.request.required.acks = 1
agent1.sinks.sink1.channel = channel1
