a2.sources = r1
a2.sinks = k1
a2.channels = c1

a2.sources.r1.type = org.apache.flume.source.kafka.KafkaSource
a2.sources.r1.channels = c1
a2.sources.r1.zookeeperConnect = 192.168.14.44:2181,192.168.14.71:2181,192.168.14.43:2181,192.168.14.120:2181,192.168.14.68:2181
a2.sources.r1.topic = test1
a2.sources.r1.groupId = flume
a2.sources.r1.kafka.consumer.timeout.ms = 100

a2.sources.r1.interceptors = i1 i2
a2.sources.r1.interceptors.i1.type = cn.rtmap.bigdata.ingest.intercept.EventDeserializer$Builder
a2.sources.r1.interceptors.i2.type = cn.rtmap.bigdata.ingest.intercept.EventDecompressor$Builder

a2.sinks.k1.type = hdfs
a2.sinks.k1.channel = c1
a2.sinks.k1.hdfs.path = /databank/ods/%{from}/%{unit_code}/%{process_date}
a2.sinks.k1.hdfs.filePrefix = %{filename}
a2.sinks.k1.hdfs.inUsePrefix = _
a2.sinks.k1.hdfs.rollInterval = 0
a2.sinks.k1.hdfs.rollSize = 0
a2.sinks.k1.hdfs.rollCount = 0
a2.sinks.k1.hdfs.idleTimeout = 300
a2.sinks.k1.hdfs.fileType = CompressedStream
a2.sinks.k1.hdfs.codeC = lzo

# Use a channel which buffers events in memory
a2.channels.c1.type = memory
a2.channels.c1.capacity = 100000
a2.channels.c1.transactionCapacity = 80000
